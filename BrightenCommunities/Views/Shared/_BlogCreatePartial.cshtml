@model BrightenCommunities.Models.Blogs

@{ Layout = null; }

<!-- Modal -->
<div class="modal fade" id="blogModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal col-centered">
                    <h4>Add Blog</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 col-centered">
                            @using Microsoft.AspNet.Identity
                            @if (Request.IsAuthenticated)
                            {
                                @Html.HiddenFor(model => model.UserName, new { @Value = User.Identity.GetUserName() })
                                @User.Identity.GetUserName();
                            }
                            else
                            {
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Post, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10 col-centered">
                            @Html.EditorFor(model => model.Post, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Post, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
