@model BrightenCommunities.Models.EmailFormModel

@{
    ViewBag.Title = "Contact";
}

<div class="row contact-message">
    <div class="col-lg-10 col-centered">
        <h2 class="text-center">@ViewBag.Title.</h2>
        <p class="text-center">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>
    </div>
</div>

<section class="container-fluid offset-right-cherry-blossom">
    <div class="row">
        <div class="col-lg-4 cherry-blossom contact-img-cherry-blossom">
            <img src="~/Content/images/cherry-blossom.png" />
        </div>
    </div>
</section>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()    

    <div class="row contact m-top-25">
        <div class="col-xs-12 col-sm-10 col-sm-push-2 col-md-push-2 col-lg-7 col-lg-push-2">
            <div class="form-horizontal contact-form">
                <div class="form-group">
                    @Html.LabelFor(m => m.FromName, new { @class = "col-md-2 control-label" })
                    <div class="col-xs-12 col-md-10 col-lg-10">
                        @Html.TextBoxFor(m => m.FromName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FromName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.FromEmail, new { @class = "col-md-2 control-label" })
                    <div class="col-xs-12 col-md-10 col-lg-10">
                        @Html.TextBoxFor(m => m.FromEmail, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FromEmail)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Message, new { @class = "col-md-2 control-label" })
                    <div class="col-xs-12 col-md-10 col-lg-10">
                        @Html.TextAreaFor(m => m.Message, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Message)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" class="btn btn-default" value="Send" />
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade contactModal" id="successModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4>@ViewBag.Message!</h4>
                </div>
            </div>
        </div>
    </div>
}

    <section class="container offset-left-tulip">
        <div class="row">
            <div class="col-lg-4 tulip contact-img">
                <img src="~/Content/images/tulips.png" />
            </div>
        </div>
    </section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @if (ViewBag.Message != null)
    {
        <script>
            $(document).ready(function () {
                console.log("Sucess");
                $("#successModal").modal('show');
            });
        </script>

    }
}

